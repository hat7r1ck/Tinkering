import matplotlib.pyplot as plt

# Define data for daily and monthly time frames
categories = ['Daily', 'Monthly']
total_case_times = [69 / 7, 276.3]  # Average daily time from weekly data, monthly total
enrichment_case_times = [12.7 / 7, 50.9]  # Average daily enrichment time, monthly enrichment total

total_cases = [592 / 7, 592 * 4]  # Daily and monthly case counts
enriched_cases = [109 / 7, 109 * 4]  # Daily and monthly enrichment-related case counts

# Set up the figure for two subplots
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))

# Plot cases vs enriched cases and add numbers on top
ax1.bar(categories, total_cases, label='Total Cases')
ax1.bar(categories, enriched_cases, label='Enriched Cases')
for i, v in enumerate(total_cases):
    ax1.text(i, v + 5, f'{v:.1f}', ha='center')
for i, v in enumerate(enriched_cases):
    ax1.text(i, v + 5, f'{v:.1f}', ha='center')
ax1.set_title('Daily and Monthly Case Counts')
ax1.set_ylabel('Case Count')
ax1.legend()

# Plot time in hours for total vs enrichment-related cases and add numbers on top
ax2.bar(categories, total_case_times, label='Total Case Time (hours)')
ax2.bar(categories, enrichment_case_times, label='Enrichment Case Time (hours)')
for i, v in enumerate(total_case_times):
    ax2.text(i, v + 5, f'{v:.1f}', ha='center')
for i, v in enumerate(enrichment_case_times):
    ax2.text(i, v + 5, f'{v:.1f}', ha='center')
ax2.set_title('Daily and Monthly Time Spent on Cases')
ax2.set_ylabel('Time in Hours')
ax2.legend()

# Display the plots
plt.tight_layout()
plt.show()
