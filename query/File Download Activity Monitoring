// Placeholder variables
$source_ip = "${source_ip}"          // e.g., "192.168.1.10" or leave empty
$file_type = "${file_type}"          // e.g., ".exe", ".zip" or leave empty

// Define the file download filter
$download_filter = (
    (principal.process.file.full_path != "" and principal.process.file.full_path contains "/download/") or
    (target.process.file.full_path != "" and target.process.file.full_path contains "/download/") or
    ($source_ip == "" and $file_type == "")
) and
(
    ($source_ip == "" or network.source.ip == $source_ip) and
    ($file_type == "" or principal.file.extension == $file_type or target.file.extension == $file_type)
)

// Apply the filter
$download_filter

// Extract relevant fields using CrowdStrike mappings
$process = principal.process.file.full_path
$process_pid = principal.process.pid
$file_name = principal.file.name
$file_path = principal.file.full_path
$file_type = principal.file.extension
$user = principal.user.userid
$command_line = principal.process.command_line
$asset_id = principal.asset_id
$asset_hostname = principal.hostname
$threat_verdict = security_result.threat_verdict
$location_city = principal.location.city
$location_country = principal.location.country_or_region
$timestamp = metadata.event_timestamp.seconds

// Group by process, process PID, and timestamp
match:
    $process, $process_pid, $timestamp

// Aggregate outcomes
outcome:
    $downloaded_files = array_distinct([$file_name, $file_path, $file_type])
    $event_count = count(metadata.id)
    $unique_users = array_distinct([$user])
    $command_lines = array_distinct($command_line)
    $asset_ids = array_distinct([$asset_id])
    $asset_hostnames = array_distinct([$asset_hostname])
    $threat_verdicts = array_distinct([$threat_verdict])
    $locations = array_distinct([$location_city, $location_country])
    $formatted_timestamp = timestamp.get_timestamp($timestamp, "Etc/UTC")

// Order by timestamp ascending
order:
    $timestamp asc
